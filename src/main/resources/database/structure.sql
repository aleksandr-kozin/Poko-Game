START TRANSACTION;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS user_locations;
DROP TABLE IF EXISTS meta_data;
DROP TABLE IF EXISTS credentials;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nick_name VARCHAR(50) UNIQUE NOT NULL,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    status ENUM('ACTIVE', 'NOT_ACTIVE', 'DELETED') NOT NULL DEFAULT 'ACTIVE',
    role ENUM('ADMIN', 'USER') NOT NULL DEFAULT 'USER'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS user_locations (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    latitude DECIMAL(15, 10),
    longitude DECIMAL(15, 10),
    user_id BIGINT UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS meta_data (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    network VARCHAR(50),
    user_id BIGINT UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS credentials (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    email VARCHAR(200) NOT NULL,
    password VARCHAR(100),
    user_id BIGINT UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

ALTER TABLE user_locations ADD CONSTRAINT FK_USER_LOCATIONS_USER FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE meta_data ADD CONSTRAINT FK_META_DATA_USERS FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE credentials ADD CONSTRAINT FK_CREDENTIALS_USERS FOREIGN KEY (user_id) REFERENCES users(id);

COMMIT;